<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kor.it.academy.user.mapper.UserMapper">

    <resultMap id="userRespMap" type="userResponse">
        <id property="userId" column="user_id" />
        <result property="userName" column="user_name"/>
        <result property="passwd" column="passwd"/>
        <result property="userBirth" column="user_birth"/>
        <result property="gender" column="gender"/>
        <result property="mobileNumber" column="mobile_number"/>
        <result property="email" column="email"/>
        <result property="addr" column="addr"/>
        <result property="addrDetail" column="addrDetail"/>
        <result property="createDate" column="create_date"/>
        <result property="updateDate" column="update_date"/>
        <!-- 권한 리스트 -->
        <collection property="authList" ofType="userAuth">
            <id property="authId" column="auth_id"/>
            <result property="authName" column="auth_name"/>
        </collection>
    </resultMap>

    <insert id="addUser" parameterType="userRequest">

        INSERT INTO user_info(user_id, user_name, passwd, user_birth, gender, mobile_number,  email, user_addr, addr_detail)
        VALUES( #{userId}, #{userName}, #{passwd}, #{userBirth}, #{gender}, #{mobileNumber},  #{email}, #{addr} , #{addrDetail} );

    </insert>

    <insert id="addUserAuthMapping" parameterType="userAuthMapping">
        INSERT INTO user_auth_mapping( user_id, auth_id)
        VALUES(#{userId},  #{authId});
    </insert>

    <select id="getUserAuthList"  resultType="userAuth">
        select auth_id,
        auth_name
        from user_auth
        where use_yn = 'Y'
        and del_yn ='N'
    </select>

    <select id="getUserListTotal" parameterType="map" resultType="int">
        SELECT count(*) as cnt
        FROM user_info u
        JOIN  user_auth_mapping mp ON u.user_id = mp.user_id
        JOIN  user_auth au ON  mp.auth_id = au.auth_id
    </select>

    <select id="getUserList" parameterType="map" resultType="userResponse">
        SELECT u.user_id,
        u.user_name,
        u.passwd,
        u.user_birth,
        u.gender,
        u.mobile_number,
        u.email,
        u.use_yn,
        u.del_yn,
        u.create_date,
        u.update_date,
        au.auth_id
        FROM user_info u
        JOIN  user_auth_mapping mp ON u.user_id = mp.user_id
        JOIN  user_auth au ON  mp.auth_id = au.auth_id
        order by u.create_date desc
    </select>

    <select id="getUser" parameterType="map" resultMap="userRespMap">
        SELECT u.user_id,
        u.user_name,
        u.passwd,
        u.user_birth,
        u.gender,
        u.mobile_number,
        u.email,
        u.user_addr as addr,
        u.addr_detail,
        u.use_yn,
        u.del_yn,
        u.create_date,
        u.update_date,
        au.auth_id,
        au.auth_name
        FROM user_info u
        JOIN  user_auth_mapping mp ON u.user_id = mp.user_id
        JOIN  user_auth au ON  mp.auth_id = au.auth_id
        where u.user_id = #{userId}
    </select>

    <update id="deleteAuthMapping" parameterType="map">
        update user_auth_mapping set
        del_yn = 'Y'
        where user_id in
        <foreach collection="deleteUsers" separator="," open="(" close=")" item="item">#{item}</foreach>
    </update>

    <update id="deleteUser" parameterType="map">
        update user_info set
        del_yn = 'Y'
        where user_id in
        <foreach collection="deleteUsers" separator="," open="(" close=")" item="item">#{item}</foreach>
    </update>

    <update id="updateUser" parameterType="userRequest">
        update user_info
        <set>
            update_date = now(),
            <if test="passwd neq null and passwd neq ''">
                passwd = #{passwd},
            </if>
            <if test="mobileNumber neq null and mobileNumber neq ''">
                mobile_number = #{mobileNumber},
            </if>
            <if test="addr neq null and addr neq ''">
                user_addr = #{addr},
            </if>
            <if test="addrDetail neq null and addrDetail neq ''">
                addr_detail = #{addrDetail}
            </if>
        </set>
        where user_id = #{userId}
    </update>

    <update id="updateUserAuth" parameterType="userRequest">
        update user_auth_mapping
        set auth_id = #{userAuth}
        where user_id = #{userId}
    </update>
</mapper>

